#!/usr/bin/env python3
import os, sys, getopt
from magma import compile

def usage():
    print('usage: magma [-b board] [-o outputformat] file\n', file=sys.stderr)
    print('Options', file=sys.stderr)
    print('-h          help', file=sys.stderr)
    print('-b board    (icestick, goboard, hx8kboard) ', file=sys.stderr)
    print('-o format   (verilog [default], coreir, firrtl, blif) ', file=sys.stderr)
    print('-m mantle   (verilog [default], coreir, lattice)', file=sys.stderr)
    print('-t top      (top circuit module, main [default])', file=sys.stderr)
    print('-d dir      (build directory [default=build])', file=sys.stderr)
    sys.exit(1)

try:
    opts, args = getopt.getopt(sys.argv[1:], 'b:o:m:t:d:')
except Exception as e:
    print(e, file=sys.stderr)
    usage()

sys.path.append(os.path.dirname(os.path.realpath(args[0])))

boards  = ['icestick', 'goboard', 'hx8kboard', 'tinyfpga']
boards += ['de0nano']
boards += ['papilioone', 'papiliopro']

target = None
vendor = None
board = None
outputformat = 'verilog'
mantle = 'verilog'
top_circuit = 'main'
build = 'build'
for o, a in opts:
    if o == '-h':
        usage()
    elif o == '-b':
        if a not in boards:
            usage()
        board = a
    elif o == '-o':
        if a not in ['verilog', 'coreir', 'firrtl', 'blif']:
            usage()
        outputformat = a
    elif o == '-m':
        if a not in ['verilog', 'coreir', 'lattice']:
            usage()
        target = a
    elif o == '-v':
        if a not in ['altera', 'xilinx', 'lattice', 'silego']:
            usage()
        vendor = a
    elif o == '-t':
        top_circuit = a
    elif o == '-d':
        build = a

name = os.path.basename(args[0])
name = os.path.splitext(name)[0]

if board in ['icestick', 'goboard', 'hx8kboard', 'tinyfpga']:
    if not target:
        target = 'ice40'
    assert vendor in [None, 'lattice']
    vendor = 'lattice'
elif board == 'de0nano':
    if not target:
        target = 'cyclone4'
    assert vendor in [None, 'altera']
    vendor = 'altera'
elif board == 'papilioone':
    if not target:
        target = 'spartan3'
    assert vendor in [None, 'xilinx']
    vendor = 'xilinx'
elif board == 'papiliopro':
    if not target:
        target = 'spartan6'
    assert vendor in [None, 'xilinx']
    vendor = 'xilinx'

if target:
    os.environ['MANTLE_TARGET'] = target

# Add CWD to PYTHONPATH so Python can find the input file
sys.path.append(os.getcwd())

main = getattr(__import__(name), top_circuit)
mainv = os.path.join(build,name)

compile(mainv, main, output=outputformat, vendor=vendor)
